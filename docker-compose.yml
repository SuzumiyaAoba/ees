# docker-compose.yml
# Production deployment configuration for EES

services:
  ees-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ees-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - EES_PROVIDER=ollama
      - EES_OLLAMA_BASE_URL=http://ollama:11434
      - EES_OLLAMA_DEFAULT_MODEL=nomic-embed-text
      - EES_DATABASE_URL=/app/data/embeddings.db
      - LOG_LEVEL=info
      - LOG_PRETTY=false
      - SERVICE_NAME=ees-api
      - SERVICE_VERSION=1.0.0
    volumes:
      - ees-data:/app/data
    networks:
      - ees-network
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ollama:
    image: ollama/ollama:latest
    container_name: ees-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - ees-network
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Model initialization service
  ollama-init:
    image: ollama/ollama:latest
    container_name: ees-ollama-init
    networks:
      - ees-network
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=http://ollama:11434
    entrypoint: /bin/sh
    command:
      - -c
      - |
        echo "Pulling nomic-embed-text model..."
        ollama pull nomic-embed-text
        echo "Model ready!"
    restart: "no"

volumes:
  ees-data:
    driver: local
  ollama-data:
    driver: local

networks:
  ees-network:
    driver: bridge
