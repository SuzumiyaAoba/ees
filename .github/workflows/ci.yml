name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Nix cache
      uses: cachix/cachix-action@v12
      with:
        name: ees-cache
        skipPush: true

    - name: Check Nix flake
      run: nix flake check

    - name: Enter development environment and install dependencies
      run: |
        nix develop --command bash -c "
          echo 'Installing npm dependencies...'
          npm ci
        "

    - name: Run linting
      run: |
        nix develop --command bash -c "
          echo 'Running linting checks...'
          npm run lint
        "

    - name: Run type checking
      run: |
        nix develop --command bash -c "
          echo 'Running TypeScript type checking...'
          npm run type-check
        "

    - name: Start Ollama service for tests
      run: |
        nix develop --command bash -c "
          echo 'Starting Ollama service...'
          ollama serve &
          sleep 3
          echo 'Ollama service started'
        "

    - name: Run tests
      run: |
        nix develop --command bash -c "
          echo 'Running test suite...'
          export NODE_ENV=test
          npm run test:run
        "

    - name: Build application
      run: |
        nix develop --command bash -c "
          echo 'Building application...'
          npm run build
        "

    - name: Build Nix package
      run: |
        echo 'Building Nix package...'
        nix build .#ees

    - name: Test Nix package build
      run: |
        echo 'Testing Nix package...'
        ls -la result/
        file result/bin/ees

  format-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check code formatting
      run: |
        nix develop --command bash -c "
          echo 'Checking code formatting...'
          npm ci
          npm run format

          # Check if there are any changes after formatting
          if ! git diff --exit-code; then
            echo 'Code is not properly formatted. Please run npm run format'
            exit 1
          fi

          echo 'Code formatting is correct'
        "

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Run security audit
      run: |
        nix develop --command bash -c "
          echo 'Running npm security audit...'
          npm ci
          npm audit --audit-level=moderate
        "